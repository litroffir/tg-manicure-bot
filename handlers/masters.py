from __future__ import annotations

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

master_router = Router()

MASTERS_INFO = """
üåü *–ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞* üåü

\U0001F487 *–ö—Å–µ–Ω–∏—è* 
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 5 –ª–µ—Ç
- –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: 
  ‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä
  ‚Ä¢ –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä
  ‚Ä¢ –ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π

\U0001F487 *–ê–Ω–∞—Å—Ç–∞—Å–∏—è* 
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 3 –≥–æ–¥–∞
- –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
  ‚Ä¢ –î–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π
  ‚Ä¢ SPA-—É—Ö–æ–¥—ã
  ‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º
"""


@master_router.message(Command("masters"))
@master_router.callback_query(F.data == "masters")
async def masters_command(callback: types.Message | types.CallbackQuery):
    if isinstance(callback, types.CallbackQuery):
        await callback.message.edit_text(
            MASTERS_INFO,
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"start")]
            ])
        )
    else:
        await callback.answer(
            MASTERS_INFO,
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"start")]
            ])
        )

